=======================================
Field declarations
=======================================

class A {
  public readonly int _B;
  private Int32 c_;
  Int64 D_e_f, g;
  Tuple<char, Nullable<int>> z;
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (field_declaration
      (field_modifiers)
      (variable_declaration
        (predefined_type)
        (variable_declarator (identifier_name))))
    (field_declaration
      (field_modifiers)
      (variable_declaration
        (identifier_name)
        (variable_declarator (identifier_name))))
    (field_declaration
      (variable_declaration
        (identifier_name)
        (variable_declarator (identifier_name))
        (variable_declarator (identifier_name))))
    (field_declaration
      (variable_declaration
        (generic_name (identifier_name) (type_parameter_list
          (type_parameter (predefined_type))
          (type_parameter (generic_name (identifier_name) (type_parameter_list (type_parameter (predefined_type)))))))
          (variable_declarator (identifier_name))))))

=======================================
Field declaration literal assignment
=======================================

class A {
  int dec = 1;
  long hex = 0xf1l;
  UInt64 dec = 1ul;
  bool t = true;
  char c = 'a';
  char esc = '\n';
  char hex = '\xf09a';
  char uni16 = '\ua0bf';
  char uni32 = '\UA0BFf9ca';
  string x = null;
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (field_declaration
      (variable_declaration
        (predefined_type)
        (variable_declarator (identifier_name) (equals_value_clause (integer_literal)))))
    (field_declaration
      (variable_declaration
        (predefined_type)
        (variable_declarator (identifier_name) (equals_value_clause (integer_literal)))))
    (field_declaration
      (variable_declaration
        (identifier_name)
        (variable_declarator (identifier_name) (equals_value_clause (integer_literal)))))
    (field_declaration
      (variable_declaration
        (predefined_type)
        (variable_declarator (identifier_name) (equals_value_clause (boolean_literal)))))
    (field_declaration
      (variable_declaration
        (predefined_type)
        (variable_declarator (identifier_name) (equals_value_clause (character_literal)))))
    (field_declaration
      (variable_declaration
        (predefined_type)
        (variable_declarator (identifier_name) (equals_value_clause (character_literal)))))
    (field_declaration
      (variable_declaration
        (predefined_type)
        (variable_declarator (identifier_name) (equals_value_clause (character_literal)))))
    (field_declaration
      (variable_declaration
        (predefined_type)
        (variable_declarator (identifier_name) (equals_value_clause (character_literal)))))
    (field_declaration
      (variable_declaration
        (predefined_type)
        (variable_declarator (identifier_name) (equals_value_clause (character_literal)))))
    (field_declaration
      (variable_declaration
        (predefined_type)
        (variable_declarator (identifier_name) (equals_value_clause (null_literal)))))))
