=====================================
Print statements
=====================================

print a
print b, c

---

(module
  (print_statement (identifier))
  (print_statement (identifier) (identifier)))

=====================================
Expression statements
=====================================

a
b + c

---

(module
  (expression_statement (identifier))
  (expression_statement (binary_operator (identifier) (identifier))))

=====================================
If statements
=====================================

if a:
  b
  c

---

(module
  (if_statement (identifier)
    (expression_statement (identifier))
    (expression_statement (identifier))))

=====================================
If else statements
=====================================

if a:
  b
elif c:
  d
else:
  f

---

(module
  (if_statement (identifier)
    (expression_statement (identifier))
    (elif_clause (identifier)
      (expression_statement (identifier)))
    (else_clause
      (expression_statement (identifier)))))

=====================================
Nested if statements
=====================================

if a:
  if b:
    c
  else:
    if e:
      f
g

---

(module
  (if_statement (identifier)
    (if_statement (identifier)
      (expression_statement (identifier))
      (else_clause
        (if_statement (identifier)
          (expression_statement (identifier))))))
  (expression_statement (identifier)))

=====================================
While statements
=====================================

while a:
  b

while c:
  d
else:
  e
  f

---

(module
  (while_statement (identifier)
    (expression_statement (identifier)))
  (while_statement (identifier)
    (expression_statement (identifier))
    (else_clause
      (expression_statement (identifier))
      (expression_statement (identifier)))))

=====================================
For statements
=====================================

for line, i in lines:
  print line
  for character, j in line:
    print character
else:
  print x

---

(module
  (for_statement
    (expression_list (identifier) (identifier))
    (expression_list (identifier))
    (print_statement (identifier))
    (for_statement
      (expression_list (identifier) (identifier))
      (expression_list (identifier))
      (print_statement (identifier)))
    (else_clause
      (print_statement (identifier)))))

=====================================
Try statements
=====================================

try:
  a
except b:
  c
except d as e:
  f
except g, h:
  i

try:
  a
finally:
  b

---

(module
  (try_statement
    (expression_statement (identifier))
    (except_clause (identifier)
      (expression_statement (identifier)))
    (except_clause (identifier) (identifier)
      (expression_statement (identifier)))
    (except_clause (identifier) (identifier)
      (expression_statement (identifier))))
  (try_statement
    (expression_statement (identifier))
    (finally_clause
      (expression_statement (identifier)))))

=====================================
With statements
=====================================

with a as b:
  c

---

(module
  (with_statement
    (with_item (identifier) (identifier))
    (expression_statement (identifier))))

=====================================
Function definitions
=====================================

def a():
  b

def c(d):
  e

def g(g, h,):
  i

---

(module
  (function_definition
    (identifier)
    (parameters)
    (expression_statement (identifier)))
  (function_definition
    (identifier)
    (parameters (identifier))
    (expression_statement (identifier)))
  (function_definition
    (identifier)
    (parameters (identifier) (identifier))
    (expression_statement (identifier))))

==============================================
Function definitions with default parameters
==============================================

def a(b = 1, c = 2,):
  d

---

(module
  (function_definition
    (identifier)
    (parameters
      (default_parameter (identifier) (number))
      (default_parameter (identifier) (number)))
    (expression_statement (identifier)))) 
