================================================================================
spec with splat
================================================================================

@spec write_dot_graph!(
        Path.t(),
        String.t(),
        [node],
        (node -> {formatted_node, [node]}),
        keyword
      ) :: :ok
      when node: term()

--------------------------------------------------------------------------------

(program
  (unary_op
    (call
      (identifier)
      (binary_op
        (binary_op
          (qualified_call
            (identifier)
            (args
              (dot_call
                (module)
                (identifier)
                (args))
              (dot_call
                (module)
                (identifier)
                (args))
              (list
                (identifier))
              (block
                (stab_expr
                  (identifier)
                  (tuple
                    (identifier)
                    (list
                      (identifier)))))
              (identifier)))
          (atom))
        (keyword_list
          (keyword)
          (qualified_call
            (identifier)
            (args)))))))

================================================================================
non empty list
================================================================================

@spec [type, ...]

--------------------------------------------------------------------------------

(program
  (unary_op
    (call
      (identifier)
      (list
        (identifier)))))
