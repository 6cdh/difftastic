
=====================================
Strings
=====================================

string1 =
        ""

string2 =
        "15131465"

string3 =
        "string1"

string4 =
        "string{(*)]+]}"

string5 =
        "string with space"

string6 =
        """
        multiline

        """

json =
        """
            { "description": null
            , "slug": \"""" ++ str ++ """"
            , "title": ""
            , "tagList": []
            , "createdAt": "2012-04-23T18:25:43.511Z"
            , "updatedAt": "2012-04-23T18:25:43.511Z"
            , "favorited": false
            , "favoritesCount": 1
            , "author":
                 { "username": ""
                 , "bio": null
                 , "image": null
                 , "following": false
                 }
            }
        """


---

(file
  (value_declaration 
        (function_declaration_left 
                (lower_case_identifier)) 
        (eq) 
        (string_constant_expr (open_quote) (close_quote))
        )
        (virtual_end_decl)
  (value_declaration 
        (function_declaration_left 
                (lower_case_identifier)) 
        (eq) 
        (string_constant_expr (open_quote) (regular_string_part) (close_quote))
        )
        (virtual_end_decl)
  (value_declaration 
        (function_declaration_left 
                (lower_case_identifier)) 
        (eq) 
        (string_constant_expr (open_quote) (regular_string_part) (close_quote))
        )
        (virtual_end_decl)
  (value_declaration 
        (function_declaration_left 
                (lower_case_identifier)) 
        (eq) 
        (string_constant_expr (open_quote) (regular_string_part) (close_quote))
        )
        (virtual_end_decl)
  (value_declaration 
        (function_declaration_left 
                (lower_case_identifier)) 
        (eq) 
        (string_constant_expr (open_quote) (regular_string_part) (close_quote))
        )
        (virtual_end_decl)
  (value_declaration 
        (function_declaration_left 
                (lower_case_identifier)) (eq) (string_constant_expr (open_quote) (regular_string_part) (close_quote))
                )
                (virtual_end_decl)
  (value_declaration 
        (function_declaration_left (lower_case_identifier)) 
        (eq)
        (bin_op_expr 
                (string_constant_expr 
                        (open_quote) 
                        (regular_string_part)
                        (regular_string_part)
                        (regular_string_part)
                        (regular_string_part)
                        (regular_string_part)
                        (regular_string_part)
                        (regular_string_part)
                        (regular_string_part)
                        (regular_string_part)
                        (string_escape) 
                        (close_quote)
                ) 
                (operator (operator_identifier))
                (value_expr (value_qid (lower_case_identifier)))
                (operator (operator_identifier)) 
                (string_constant_expr 
                        (open_quote) 
                        (regular_string_part) 
                        (regular_string_part)
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (regular_string_part) 
                        (close_quote)
                )
        )
  ) 
  (virtual_end_decl)
)


=====================================
Tuples
=====================================

tuple1 =
        ()
tuple2 =
        (0, 15)
tuple3 =
        (0,15)
tuple4 =
        ("string",  "string")

---

(file
  (value_declaration (function_declaration_left (lower_case_identifier)) (eq)
            (unit_expr (left_parenthesis) (right_parenthesis)))
  (virtual_end_decl)
  (value_declaration (function_declaration_left (lower_case_identifier)) (eq)
            (tuple_expr (left_parenthesis) (number_constant_expr (number_literal)) (comma) (number_constant_expr (number_literal)) (right_parenthesis)))
  (virtual_end_decl)
  (value_declaration (function_declaration_left (lower_case_identifier)) (eq)
            (tuple_expr (left_parenthesis) (number_constant_expr (number_literal)) (comma) (number_constant_expr (number_literal)) (right_parenthesis)))
  (virtual_end_decl)
  (value_declaration (function_declaration_left (lower_case_identifier)) (eq)
            (tuple_expr 
                (left_parenthesis) 
                (string_constant_expr (open_quote) (regular_string_part) (close_quote))
                (comma) 
                (string_constant_expr (open_quote) (regular_string_part)  (close_quote)) 
                (right_parenthesis)
            )
  )
  (virtual_end_decl)
)