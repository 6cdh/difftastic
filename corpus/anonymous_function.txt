================================================================================
parenthesized no arg
================================================================================

fn() -> a + b end

--------------------------------------------------------------------------------

(program
  (expr
    (anonymous_function
      (stab_expr
        (expr
          (block))
        (expr
          (binary_op
            (expr
              (identifier))
            (expr
              (identifier))))))))

================================================================================
parenthesized one arg
================================================================================

fn(a) -> a + b end

--------------------------------------------------------------------------------

(program
  (expr
    (anonymous_function
      (stab_expr
        (expr
          (block
            (expr
              (identifier))))
        (expr
          (binary_op
            (expr
              (identifier))
            (expr
              (identifier))))))))

================================================================================
parenthesized multi args
================================================================================

fn(a, b) -> a + b end

--------------------------------------------------------------------------------

(program
  (expr
    (anonymous_function
      (stab_expr
        (expr
          (identifier))
        (expr
          (identifier))
        (expr
          (binary_op
            (expr
              (identifier))
            (expr
              (identifier))))))))

================================================================================
parenthesized multi args, multi line body
================================================================================

fn(a, b) ->
  a + b
  5
end

--------------------------------------------------------------------------------

(program
  (expr
    (anonymous_function
      (stab_expr
        (expr
          (identifier))
        (expr
          (identifier))
        (expr
          (binary_op
            (expr
              (identifier))
            (expr
              (identifier))))
        (expr
          (integer))))))

================================================================================
non parenthesized no arg
================================================================================

fn -> a + b end

--------------------------------------------------------------------------------

(program
  (expr
    (anonymous_function
      (stab_expr
        (expr
          (binary_op
            (expr
              (identifier))
            (expr
              (identifier))))))))

================================================================================
non parenthesized one arg
================================================================================

fn a -> a + b end

--------------------------------------------------------------------------------

(program
  (expr
    (anonymous_function
      (stab_expr
        (expr
          (identifier))
        (expr
          (binary_op
            (expr
              (identifier))
            (expr
              (identifier))))))))

================================================================================
non parenthesized multi args
================================================================================

fn a, b -> a + b end

--------------------------------------------------------------------------------

(program
  (expr
    (anonymous_function
      (stab_expr
        (expr
          (identifier))
        (expr
          (identifier))
        (expr
          (binary_op
            (expr
              (identifier))
            (expr
              (identifier))))))))

================================================================================
non parenthesized multi args, multi line body
================================================================================

fn a, b ->
  a + b
  5
end

--------------------------------------------------------------------------------

(program
  (expr
    (anonymous_function
      (stab_expr
        (expr
          (identifier))
        (expr
          (identifier))
        (expr
          (binary_op
            (expr
              (identifier))
            (expr
              (identifier))))
        (expr
          (integer))))))

================================================================================
non parenthesized body with dot call
================================================================================

File.cd!(dir, fn ->
  Mix.Task.run("deps.loadpaths")
end)

--------------------------------------------------------------------------------

(program
  (expr
    (dot_call
      (module)
      (identifier)
      (args
        (expr
          (identifier))
        (expr
          (anonymous_function
            (stab_expr
              (expr
                (dot_call
                  (module)
                  (identifier)
                  (args
                    (expr
                      (string
                        (string_start)
                        (string_content)
                        (string_end)))))))))))))

================================================================================
no arg with guard
================================================================================

fun = fn () when node() == :nonode@nohost -> true end

--------------------------------------------------------------------------------

(program
  (expr
    (binary_op
      (expr
        (identifier))
      (expr
        (anonymous_function
          (stab_expr
            (expr
              (binary_op
                (expr
                  (block))
                (expr
                  (binary_op
                    (expr
                      (qualified_call
                        (identifier)
                        (args)))
                    (expr
                      (atom))))))
            (expr
              (literal))))))))
