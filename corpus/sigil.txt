================================================================================
interpolation
================================================================================

~s/f#{"o"}o/

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (interpolation
        (expr
          (string
            (string_start)
            (string_content)
            (string_end))))
      (sigil_content)
      (sigil_end))))

================================================================================
regex
================================================================================

~r/foo|bar/

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (sigil_end))))

================================================================================
regex with modifier
================================================================================

~r/hello/i

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (sigil_end))))

================================================================================
quotes
================================================================================

~s(this is a string with "double" quotes, not 'single' ones)

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (sigil_end))))

================================================================================
string with interpolation
================================================================================

~s(String with escape codes \x26 #{"inter" <> "polation"})

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (interpolation
        (expr
          (binary_op
            (expr
              (string
                (string_start)
                (string_content)
                (string_end)))
            (expr
              (string
                (string_start)
                (string_content)
                (string_end))))))
      (sigil_end))))

================================================================================
string without interpolation
================================================================================

~S(String without escape codes \x26 without #{interpolation})

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (sigil_end))))

================================================================================
triple quotes
================================================================================

~S"""
Converts double-quotes to single-quotes.

## Examples

    iex> convert("\"foo\"")
    "'foo'"

"""

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (sigil_end))))

================================================================================
date time
================================================================================

~U[2019-10-31 19:59:03Z]

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (sigil_end))))

================================================================================
single quote triple quotes
================================================================================

~S'''
Converts double-quotes to single-quotes.

## Examples

    iex> convert("\"foo\"")
    "'foo'"

'''

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (sigil_end))))

================================================================================
regex with triple quotes
================================================================================

~r"""
\[error\] GenServer #PID<\d+\.\d+\.\d+> terminating
\*\* \(RuntimeError\) oops
.*
Last message \(from #PID<\d+\.\d+\.\d+>\): :error
State: :ok
Client #PID<\d+\.\d+\.\d+> is alive
.*
"""s

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (escape_sequence)
      (sigil_content)
      (sigil_end))))

================================================================================
sigil escape
================================================================================

~r"""
\["\$callers"
\$"#{}
\$"#
"""

--------------------------------------------------------------------------------

(program
  (expr
    (sigil
      (sigil_start)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (interpolation)
      (sigil_content)
      (escape_sequence)
      (sigil_content)
      (sigil_end))))

================================================================================
sigil always escape terminator
================================================================================

[~S(foo\)), ~S[foo\]], ~S[foo"\]]]

--------------------------------------------------------------------------------

(program
  (expr
    (list
      (expr
        (sigil
          (sigil_start)
          (sigil_content)
          (escape_sequence)
          (sigil_end)))
      (expr
        (sigil
          (sigil_start)
          (sigil_content)
          (escape_sequence)
          (sigil_end)))
      (expr
        (sigil
          (sigil_start)
          (sigil_content)
          (escape_sequence)
          (sigil_end))))))
