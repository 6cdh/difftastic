==========================
Function calls
==========================

a {
  color: rgba(0, 255, 0, 0.5);
}

---

(stylesheet
  (rule_set
    (selectors (tag_name))
    (block
      (declaration
        (property_name)
        (call_expression (function_name) (arguments
          (integer_value)
          (integer_value)
          (integer_value)
          (float_value)))))))

=============================================
Calls where each argument has multiple values
=============================================

div {
  background: repeating-linear-gradient(red, orange 50px);
  clip-path: polygon(50% 0%, 60% 40%, 100% 50%, 60% 60%, 50% 100%, 40% 60%, 0% 50%, 40% 40%);
}

---

(stylesheet
  (rule_set (selectors (tag_name)) (block
    (declaration
      (property_name)
      (call_expression (function_name) (arguments
        (plain_value)
        (plain_value)
        (integer_value (unit)))))
    (declaration
      (property_name)
      (call_expression (function_name) (arguments
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))
        (integer_value (unit))))))))

============================
Color literals
============================

a {
  b: #fafd04;
  c: #fafd0401;
}

---

(stylesheet
  (rule_set
    (selectors (tag_name))
    (block
      (declaration (property_name) (color_value))
      (declaration (property_name) (color_value)))))

============================
Numbers
============================

a {
  b: 0.5%;
  c: 5em;
  margin: 10E3px;
}

---

(stylesheet
  (rule_set (selectors (tag_name)) (block
    (declaration (property_name) (float_value (unit)))
    (declaration (property_name) (integer_value (unit)))
    (declaration (property_name) (float_value (unit))))))

============================
Binary arithmetic operators
============================

a {
  width: calc(100% - 80px);
  aspect-ratio: 1/2;
}

---

(stylesheet
  (rule_set
    (selectors (tag_name))
    (block
      (declaration
        (property_name)
        (call_expression (function_name) (arguments (binary_expression (integer_value (unit)) (integer_value (unit))))))
      (declaration
        (property_name)
        (binary_expression (integer_value) (integer_value))))))

============================
Strings
============================

a {
  b: '';
  c: '\'hi\'';
}

---

(stylesheet
  (rule_set
    (selectors (tag_name))
    (block
      (declaration (property_name) (string_value))
      (declaration (property_name) (string_value)))))

============================
URLs
============================

a {
  b: http://something-else?foo=bar;
}

---

(stylesheet
  (rule_set
    (selectors (tag_name))
    (block
      (declaration (property_name) (plain_value)))))

============================
Important declarations
============================

a {
  b: c !important;
}

---

(stylesheet
  (rule_set
    (selectors (tag_name))
    (block
      (declaration (property_name) (plain_value) (important)))))

============================
Declarations without trailing semicolons
============================

a {
  b: c;
  d: e
}

---

(stylesheet
  (rule_set
    (selectors (tag_name))
    (block
      (declaration (property_name) (plain_value))
      (declaration (property_name) (plain_value)))))
