================================================================================
module parens call
================================================================================

A.B.c("a")

--------------------------------------------------------------------------------

(source_file
  (statement
    (expr
      (dot_call
        (module)
        (identifier)
        (args
          (expr
            (string
              (string_start)
              (string_content)
              (string_end))))))))

================================================================================
bare keyword list
================================================================================

Module.func!(
  args,
  aliases: [r: :require, p: :parallel, e: :eval, c: :config],
  strict: [
    parallel: :boolean,
    require: :keep
  ]
)

--------------------------------------------------------------------------------

(source_file
  (statement
    (expr
      (dot_call
        (module)
        (identifier)
        (args
          (expr
            (identifier))
          (bare_keyword_list
            (keyword)
            (expr
              (list
                (bare_keyword_list
                  (keyword)
                  (expr
                    (atom))
                  (keyword)
                  (expr
                    (atom))
                  (keyword)
                  (expr
                    (atom))
                  (keyword)
                  (expr
                    (atom)))))
            (keyword)
            (expr
              (list
                (bare_keyword_list
                  (keyword)
                  (expr
                    (atom))
                  (keyword)
                  (expr
                    (atom)))))))))))

================================================================================
local var call
================================================================================

a.()()

--------------------------------------------------------------------------------

(source_file
  (statement
    (expr
      (call
        (qualified_call
          (identifier)
          (args))
        (args)))))

================================================================================
operator call
================================================================================

Kernel.+(1, 1)

--------------------------------------------------------------------------------

(source_file
  (statement
    (expr
      (dot_call
        (module)
        (args
          (expr
            (integer))
          (expr
            (integer)))))))

================================================================================
reserved word call
================================================================================

a.and

--------------------------------------------------------------------------------

(source_file
  (statement
    (expr
      (dot_call
        (identifier)))))

================================================================================
access call followed by dot call
================================================================================

cover[:tool].start(compile_path, cover)

--------------------------------------------------------------------------------

(source_file
  (statement
    (expr
      (dot_call
        (access_call
          (expr
            (identifier))
          (expr
            (atom)))
        (identifier)
        (args
          (expr
            (identifier))
          (expr
            (identifier)))))))
