=====================================
module statement exposing all
=====================================

module Main exposing (..)

---

(file
  (module_declaration (module)
    (upper_case_qid (upper_case_identifier)) (exposing_list (exposing) (left_parenthesis) (double_dot) (right_parenthesis))
  )
  (virtual_end_decl)
)
=====================================
module statement sub dir exposing all
=====================================

module Page.View exposing (..)

---

(file
  (module_declaration (module)
    (upper_case_qid (upper_case_identifier) (dot) (upper_case_identifier)) (exposing_list (exposing) (left_parenthesis) (double_dot) (right_parenthesis))
  )
  (virtual_end_decl)
)

=====================================
module statement exposing single function
=====================================

module Main exposing (view)

---

(file
  (module_declaration (module)
    (upper_case_qid (upper_case_identifier)) (exposing_list (exposing) (left_parenthesis) (exposed_value (lower_case_identifier)) (right_parenthesis))
  )
  (virtual_end_decl)
)

=====================================
module statement exposing multiple functions
=====================================

module Main exposing (main, update, view)

---

(file
  (module_declaration (module)
    (upper_case_qid (upper_case_identifier)) (exposing_list (exposing) (left_parenthesis) (exposed_value (lower_case_identifier)) (comma) (exposed_value (lower_case_identifier)) (comma) (exposed_value (lower_case_identifier)) (right_parenthesis))
  )
  (virtual_end_decl)
)

=====================================
module statement exposing type with all constructors and functins
=====================================

module Main exposing (Msg(..), main, update, view)

---

(file
  (module_declaration (module)
    (upper_case_qid (upper_case_identifier)) (exposing_list (exposing) (left_parenthesis) (exposed_type (upper_case_identifier) (exposed_union_constructors (left_parenthesis) (double_dot) (right_parenthesis))) (comma)
                                                                                           (exposed_value (lower_case_identifier)) (comma)
                                                                                           (exposed_value (lower_case_identifier)) (comma)
                                                                                           (exposed_value (lower_case_identifier)) (right_parenthesis))
  )
  (virtual_end_decl)
)

=====================================
module statement exposing type with no constructors and functins
=====================================

module Main exposing (Msg, main, update, view)

---

(file
  (module_declaration (module)
    (upper_case_qid (upper_case_identifier)) (exposing_list (exposing) (left_parenthesis) (exposed_type (upper_case_identifier)) (comma)
                                                                                           (exposed_value (lower_case_identifier)) (comma)
                                                                                           (exposed_value (lower_case_identifier)) (comma)
                                                                                           (exposed_value (lower_case_identifier)) (right_parenthesis))
  )
  (virtual_end_decl)
)

=====================================
module statement exposing type with one constructors and functins
=====================================

module Main exposing (Msg(One), main, update, view)

---

(file
  (module_declaration (module)
    (upper_case_qid (upper_case_identifier)) (exposing_list (exposing) (left_parenthesis) (exposed_type (upper_case_identifier) (exposed_union_constructors (left_parenthesis) (exposed_union_constructor (upper_case_identifier)) (right_parenthesis))) (comma)
                                                                                           (exposed_value (lower_case_identifier)) (comma)
                                                                                           (exposed_value (lower_case_identifier)) (comma)
                                                                                           (exposed_value (lower_case_identifier)) (right_parenthesis))
  )
  (virtual_end_decl)
)