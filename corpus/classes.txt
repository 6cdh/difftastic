==================
Classes
==================

class Empty
class Empty2 {}

---

(source_file
	(class_declaration (simple_identifier))
	(class_declaration (simple_identifier) (class_body)))
 
==================
Class with methods
==================

class HelloWorld {
	fun a() {}

	fun b() {}
}

---

(source_file
	(class_declaration (simple_identifier)
		(class_body
			(function_declaration (simple_identifier) (function_body))
			(function_declaration (simple_identifier) (function_body)))))

==================
Generic class
==================

class Container<T> {}

---

(source_file
	(class_declaration (simple_identifier)
		(type_parameters (type_parameter (simple_identifier)))
		(class_body)))

==================
Class with methods and expressions
==================

class Strings {
	fun aString() = "Hello World!"

	fun anotherString() = "Hello" + " " + "World"
}

---

(source_file
	(class_declaration (simple_identifier)
		(class_body
			(function_declaration (simple_identifier) (function_body
				(line_string_literal)))
			(function_declaration (simple_identifier) (function_body
				(binary_expression
					(binary_expression
						(line_string_literal)
						(line_string_literal))
					(line_string_literal)))))))

==================
Class with modifiers
==================

internal open class Test {
	private abstract inline fun test()
}

---

(source_file
	(class_declaration
		(modifiers (visibility_modifier) (inheritance_modifier))
		(simple_identifier)
		(class_body
			(function_declaration
				(modifiers (visibility_modifier) (inheritance_modifier) (function_modifier))
				(simple_identifier)))))

==================
Objects
==================

object Singleton {
	fun test()
}

---

(source_file
	(object_declaration (simple_identifier)
		(class_body
			(function_declaration (simple_identifier)))))

==================
Primary constructors
==================

data class Vector2D(
	val x: Int,
	val y: Int
)

---

(source_file
	(class_declaration
		(modifiers (class_modifier))
		(simple_identifier)
		(primary_constructor
			(class_parameter
				(simple_identifier)
				(type_reference (user_type (simple_identifier))))
			(class_parameter
				(simple_identifier)
				(type_reference (user_type (simple_identifier)))))))
