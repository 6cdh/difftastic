================================================================================
Pragma and imports
================================================================================

pragma Singleton
pragma ListPropertyAssignBehavior: Append
import QtQuick
import Qt.labs.platform as Platform
import QtQuick.Controls 2
import QtQuick3D 1.15
import "path"
import "script.js" as Script

Item {}

--------------------------------------------------------------------------------

(program
  headers: (ui_header_item_list
    (ui_pragma
      name: (identifier))
    (ui_pragma
      name: (identifier)
      value: (identifier))
    (ui_import
      uri: (ui_import_uri
        (identifier)))
    (ui_import
      uri: (ui_import_uri
        (identifier)
        (identifier)
        (identifier))
      id: (identifier))
    (ui_import
      uri: (ui_import_uri
        (identifier)
        (identifier))
      version: (ui_version_specifier
        major: (number)))
    (ui_import
      uri: (ui_import_uri
        (identifier))
      version: (ui_version_specifier
        major: (number)
        minor: (number)))
    (ui_import
      uri: (string
        (string_fragment)))
    (ui_import
      uri: (string
        (string_fragment))
      id: (identifier)))
  root: (ui_object_definition
    type_name: (identifier)
    initializer: (ui_object_initializer)))

================================================================================
Shebang
================================================================================

#!/usr/bin/env qml
import QtQml

OtObject {}

--------------------------------------------------------------------------------

(program
  (hash_bang_line)
  (ui_header_item_list
    (ui_import
      (ui_import_uri
        (identifier))))
  (ui_object_definition
    (identifier)
    (ui_object_initializer)))

================================================================================
Nested objects
================================================================================

import QtQuick
import QtQuick.Controls as C

Item {
    Rectangle {}
    C.Button {}
}

--------------------------------------------------------------------------------

(program
  headers: (ui_header_item_list
    (ui_import
      uri: (ui_import_uri
        (identifier)))
    (ui_import
      uri: (ui_import_uri
        (identifier)
        (identifier))
      id: (identifier)))
  root: (ui_object_definition
    type_name: (identifier)
    initializer: (ui_object_initializer
      (ui_object_definition
        type_name: (identifier)
        initializer: (ui_object_initializer))
      (ui_object_definition
        type_name: (ui_qualified_id
          (identifier)
          (identifier))
        initializer: (ui_object_initializer)))))

================================================================================
Script bindings
================================================================================

MyItem {
    id: root
    emptySt: ;
    withSt: with (Math) PI
    ifSt: if(x) true; else false;
    switchSt: switch (y) {
    default: return undefined;
    }
    objectLit: {foo: false, bar: true}
    memberExpr: member.expr
    paren.expr: (true)
    onFunction: function(a) {}
    onArrow: (b) => {}
    onTrySt: try { foo(); } catch (error) {}
}

--------------------------------------------------------------------------------

(program
  root: (ui_object_definition
    type_name: (identifier)
    initializer: (ui_object_initializer
      (ui_binding
        name: (identifier)
        value: (expression_statement
          (identifier)))
      (ui_binding
        name: (identifier)
        value: (empty_statement))
      (ui_binding
        name: (identifier)
        value: (with_statement
          object: (parenthesized_expression
            (identifier))
          body: (expression_statement
            (identifier))))
      (ui_binding
        name: (identifier)
        value: (if_statement
          condition: (parenthesized_expression
            (identifier))
          consequence: (expression_statement
            (true))
          alternative: (else_clause
            (expression_statement
              (false)))))
      (ui_binding
        name: (identifier)
        value: (switch_statement
          value: (parenthesized_expression
            (identifier))
          body: (switch_body
            (switch_default
              body: (return_statement
                (undefined))))))
      (ui_binding
        name: (identifier)
        value: (expression_statement
          (object
            (pair
              key: (property_identifier)
              value: (false))
            (pair
              key: (property_identifier)
              value: (true)))))
      (ui_binding
        name: (identifier)
        value: (expression_statement
          (member_expression
            object: (identifier)
            property: (property_identifier))))
      (ui_binding
        name: (ui_qualified_id
          (identifier)
          (identifier))
        value: (expression_statement
          (parenthesized_expression
            (true))))
      (ui_binding
        name: (identifier)
        value: (expression_statement
          (function
            parameters: (formal_parameters
              (required_parameter
                pattern: (identifier)))
            body: (statement_block))))
      (ui_binding
        name: (identifier)
        value: (expression_statement
          (arrow_function
            parameters: (formal_parameters
              (required_parameter
                pattern: (identifier)))
            body: (statement_block))))
      (ui_binding
        name: (identifier)
        value: (try_statement
          body: (statement_block
            (expression_statement
              (call_expression
                function: (identifier)
                arguments: (arguments))))
          handler: (catch_clause
            parameter: (identifier)
            body: (statement_block)))))))

================================================================================
Annotations
================================================================================

import QtQml

@Foo {}
@Bar {}
QtObject {
    @Foo {}
    @Bar {}
    OtObject {}
}

--------------------------------------------------------------------------------

(program
  headers: (ui_header_item_list
    (ui_import
      uri: (ui_import_uri
        (identifier))))
  root: (ui_annotated_object
    annotations: (ui_annotation_list
      (ui_annotation
        type_name: (identifier)
        initializer: (ui_object_initializer))
      (ui_annotation
        type_name: (identifier)
        initializer: (ui_object_initializer)))
    definition: (ui_object_definition
      type_name: (identifier)
      initializer: (ui_object_initializer
        (ui_annotated_object_member
          annotations: (ui_annotation_list
            (ui_annotation
              type_name: (identifier)
              initializer: (ui_object_initializer))
            (ui_annotation
              type_name: (identifier)
              initializer: (ui_object_initializer)))
          definition: (ui_object_definition
            type_name: (identifier)
            initializer: (ui_object_initializer)))))))
